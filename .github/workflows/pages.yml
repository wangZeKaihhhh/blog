name: Deploy to Cloud Server

on:
  push:
    branches: main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: yarn
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/yarn.lock') }}-
      - run: yarn
      - run: yarn build
        env:
          EXPORT: 1
          UNOPTIMIZED: 1
      - name: Prepare Deployment Files
        run: |
          mkdir -p out
          mv ./out/* ./out/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to Cloud Server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          scp -o StrictHostKeyChecking=no -i private_key -r ./out/* $REMOTE_USER@$REMOTE_HOST:$REMOTE_PATH
